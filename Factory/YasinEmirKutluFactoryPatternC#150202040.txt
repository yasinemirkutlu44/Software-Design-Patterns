// Program.cs

using System;

namespace YazýlýmTasarýnKalýplarýFactoryPattern
{
    class Program
    {
        public static void Main(string[] args)
        {
            TransportationFactory transportationFactory = new TransportationFactory();

            Transportation transportation1 = transportationFactory.getVehicle("Ship");
            transportation1.TransportProducts();

            Transportation transportation2 = transportationFactory.getVehicle("Plane");
            transportation2.TransportProducts();

            Transportation transportation3 = transportationFactory.getVehicle("Truck");
            transportation3.TransportProducts();

        }
    }
}

//Transportation.cs

using System;
using System.Collections.Generic;
using System.Text;

namespace YazýlýmTasarýnKalýplarýFactoryPattern
{
    public interface Transportation
    {
         void TransportProducts();
    }

    public class Truck : Transportation //Extends
    {
        public void TransportProducts()
        {
            Console.WriteLine("The products have been posted by Truck"); //Override
        }
    }

    public class Ship : Transportation // Extends
    {
        public void TransportProducts()
        {
            Console.WriteLine("The products have been posted by Ship"); //Override
        }
    }

    public class Plane : Transportation // Extends
    {
        public void TransportProducts()
        {
            Console.WriteLine("The products have been posted by Plane"); //Override
        }
    }
}

//TransportationFactory.cs

using System;
using System.Collections.Generic;
using System.Text;

namespace YazýlýmTasarýnKalýplarýFactoryPattern
{
    public class TransportationFactory
    {
        public Transportation getVehicle(String transportationType)
        {
            if (transportationType == null) return null;
            if (transportationType.Equals("Truck", StringComparison.InvariantCultureIgnoreCase))
            {
                return new Truck();
            }
            else if (transportationType.Equals("Ship", StringComparison.InvariantCultureIgnoreCase))
            {
                return new Ship();
            }
            else if (transportationType.Equals("Plane", StringComparison.InvariantCultureIgnoreCase))
            {
                return new Plane();
            }
            return null;
        }
    }
   
}