= Factory Pattern Kod Satýrý Açýklamasý

[source,C#]
----
//Transportation.cs Sýnýfý

using System;
using System.Collections.Generic;
using System.Text; // <1>

namespace YazýlýmTasarýnKalýplarýFactoryPattern // <2>
{
    public interface Transportation // <3>
    {
         void TransportProducts();
    }

    public class Truck : Transportation // <4>
    {
        public void TransportProducts()
        {
            Console.WriteLine("The products have been posted by Truck"); //Override
        }
    }

    public class Ship : Transportation // <5>
    {
        public void TransportProducts()
        {
            Console.WriteLine("The products have been posted by Ship"); //Override
        }
    }

    public class Plane : Transportation //<6>
    {
        public void TransportProducts()
        {
            Console.WriteLine("The products have been posted by Plane"); //Override
        }
    }
}

// TransportationFactory.cs Sýnýfý

using System;
using System.Collections.Generic;
using System.Text;

namespace YazýlýmTasarýnKalýplarýFactoryPattern
{
    public class TransportationFactory
    {
        public Transportation getVehicle(String transportationType) // <7>
        {
            if (transportationType == null) return null;
            if (transportationType.Equals("Truck", StringComparison.InvariantCultureIgnoreCase)) // <8>
            {
                return new Truck();
            }
            else if (transportationType.Equals("Ship", StringComparison.InvariantCultureIgnoreCase)) // <9>
            {
                return new Ship();
            }
            else if (transportationType.Equals("Plane", StringComparison.InvariantCultureIgnoreCase)) // <10>
            {
                return new Plane();
            }
            return null;
        }
    }
   
}

// Program.cs Sýnýfý
using System;

namespace YazýlýmTasarýnKalýplarýFactoryPattern
{
    class Program
    {
        public static void Main(string[] args)
        {
            TransportationFactory transportationFactory = new TransportationFactory(); // <11> 

            Transportation transportation1 = transportationFactory.getVehicle("Ship");
            transportation1.TransportProducts();

            Transportation transportation2 = transportationFactory.getVehicle("Plane");
            transportation2.TransportProducts();

            Transportation transportation3 = transportationFactory.getVehicle("Truck");
            transportation3.TransportProducts();

        }
    }
}

----
<1> Kütüphane Eriþim

<2> Namespace Ýsmi

<3> Interface Tanýmlamasý

<4> Truck sýnýfýnýn Transportation interface ' den kalýtýlmasý ve içerisinde TransportProducts() methodunun override edilmesi.

<5> Ship sýnýfýnýn Transportation interface ' den kalýtýlmasý ve içerisinde TransportProducts() methodunun override edilmesi.

<6> Plane sýnýfýnýn Transportation interface ' den kalýtýlmasý ve içerisinde TransportProducts() methodunun override edilmesi.

<7> GetVehicle adlý Methodun Oluþturulmasý

<8> Truck Transportation iþlemi Seçildiginde Truck () methodunun döndürülmesi.

<9> Ship Transportation iþlemi Seçildiginde Truck () methodunun döndürülmesi.


<10> Plane Transportation iþlemi Seçildiginde Truck () methodunun döndürülmesi.

<11> TransportationFactory sýnýfý tipinde transportationFactory nesnesinin oluþturulmasý.
