= Builder Pattern UML(Yasin Emir Kutlu 150202040)

[plantuml,BuilderPattern,png]

----

class PlaneDirector
{
+ UcakUreticisi (planeBuilder : PlaneBuilder)
}

class _PlaneBuilder_
{
# Plane plane
+ Plane() : Plane
+ _SetUreticiTipi()_ : Void
+ _SetModel()_ : Void
+ _SetMenzil()_ : Void
+ _SetMotorSayisi()_ : Void
+ _SetKanatAcikligi()_ : Void
}

class BoeingConcreteBuilder
{
+ BoeingConcreteBuilder()
+ SetUreticiTipi() : Void
+ SetModel() : Void
+ SetMenzil() : Void
+ SetMotorSayisi() : Void
+ SetKanatAcikligi() : Void

}
class AirbusConcreteBuilder
{
+ AirbusConcreteBuilder()
+ SetUreticiTipi() : Void
+ SetModel() : Void
+ SetMenzil() : Void
+ SetMotorSayisi() : Void
+ SetKanatAcikligi() : Void
}
class EmbraerConcreteBuilder
{
+ EmbraerConcreteBuilder()
+ SetUreticiTipi() : Void
+ SetModel() : Void
+ SetMenzil() : Void
+ SetMotorSayisi() : Void
+ SetKanatAcikligi() : Void
}

class Program
{
+{Static} Main():Void
+ ucakUreticiDemand : PlaneDirector
+ ucakUretici : _PlaneBuilder_
}

class Plane
{
+ String UcakTipi
+ String Model
+ int Menzil
+ int MotorSayisi
+ int KanatAcikligi
+ int TekerlekSayisi
+ Boolean EglenceSistemi
}

BoeingConcreteBuilder .up.> _PlaneBuilder_ : <<extends>>
AirbusConcreteBuilder .up.> _PlaneBuilder_  : <<extends>>
EmbraerConcreteBuilder .up.> _PlaneBuilder_  :<<extends>>

BoeingConcreteBuilder --> Plane : <<produces>>
AirbusConcreteBuilder --> Plane : <<produces>>
EmbraerConcreteBuilder --> Plane : <<produces>>


PlaneDirector o-right-> _PlaneBuilder_
Program --> PlaneDirector : <<demands>>
PlaneDirector -left-> Program : <<responses>>




Enum UcakTipi
{
Boeing
Airbus
Embraer
}
----