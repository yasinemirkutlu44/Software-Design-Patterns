= Singleton Pattern Kod Satýrý Açýklamasý

[source,C#]
----

-----SingletonMainProgram.cs Sýnýfý -----

using System; // <1> 

namespace SingletonPattern // <2>
{
    class SingletonMainProgram // <3>
    {
        public static void Main(string[] args)
        {
            Singleton singleton1 = Singleton.CreateInstance() // <4>
            Singleton singleton2 = Singleton.CreateInstance(); // <5>

            if(singleton1 == singleton2) // <6>
            {
                Console.WriteLine("Objects are using the same instance"); // <7>
            }
            else
            {
                Console.WriteLine("Objects are not using the same instance"); // <8>
            }
        }
    }
}

-----Singleton.cs Sýnýfý-----
using System;
using System.Collections.Generic;
using System.Text;

namespace SingletonPattern 
{
    public sealed class Singleton
    {
        private static Singleton instance = null; //<9>
        private Singleton() // <10>
        {

        }

        public static Singleton CreateInstance()
        {
            if (instance == null) // <11>
            {
                instance = new Singleton();// <12>
            }

            return instance; // <13>
        }
    }
}
----
<1> Kütüphane Ekleme

<2> Namespace Ýsmi

<3> SingletonMainProgram adlý sýnýfýn kod blogunun baþlangýcý

<4> Singleton tipindeki singleton1 nesnesi için Singleton sýnýfýndaki CreateInstance methoduna baþvuru.

<5> Singleton tipindeki singleton2 nesnesi için Singleton sýnýfýndaki CreateInstance methoduna baþvuru.

<6> CreateInstance methodunun gelen instance'a göre singleton örüntüsünün dogru çalýþýp çalýþmadýðýnýn ekrana basýlmasý.

<7> Tek bir instance döndürülerek singleton örüntüsünün temel ilkesinin saðlandýðýný gösterir.

<8> Singleton örüntüsünün doðru çalýþmadýðýný gösterir.

<9> Singleton tipindeki statik nesnesin tanýmlanmasý ve null degerine eþitlenmesi

<10> Private Constructor Tanýmlanmasý

<11> instance degerinin null olup olmadýðý kontrolü

<12> instance oluþturma (Daha önce oluþturulmamýþ, ilk defa oluþturuluyor anlamý taþýr.)

<13> Oluþturulan Instance return edilir.

